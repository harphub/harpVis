% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggplot_functions.R
\name{abs_range}
\alias{abs_range}
\title{The absolute range of a diverging sequence}
\usage{
abs_range(x)
}
\arguments{
\item{x}{A numeric vector}
}
\value{
Negative and postive limits that are
}
\description{
Given a sequence that contains both negative and positive numbers,
\code{abs_range()} returns negative and positive limits that are equidistant
from zero. The function can be passed to the \code{limits} argument of a \emph{ggplot}
scale to ensure the limits are are equally distributed about zero.
}
\examples{
abs_range(seq(-3, 6))

# Use in ggplot
library(ggplot2)
df <- expand.grid(x = seq_len(100), y = seq_len(100))
df$z <- sin(df$x / 10) + sin(df$y / 10) + 1

# Standard scaling
ggplot(df, aes(x, y, fill = z)) +
  geom_raster() +
  scale_fill_gradient2()

# Use abs_range to ensure whole scale is included in legend
ggplot(df, aes(x, y, fill = z)) +
  geom_raster() +
  scale_fill_gradient2(limits = abs_range)

# Use abs_range to ensure colours in scale_fill_gradientn() are equally
# distributed about zero

# Normal behaviour
ggplot(df, aes(x, y, fill = z)) +
  geom_raster() +
  scale_fill_gradientn(colours = c("darkgreen", "white", "deeppink4"))

# Using abs_range to set limits
ggplot(df, aes(x, y, fill = z)) +
  geom_raster() +
  scale_fill_gradientn(
    colours = c("darkgreen", "white", "deeppink4"), limits = abs_range
  )
}
